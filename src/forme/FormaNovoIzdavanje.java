/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Bibliotekar;
import domen.Clan;
import domen.Izdavanje;
import domen.Knjiga;
import domen.StavkaIzdavanja;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import konstante.Operacije;
import modeli.TableModelIzdavanje;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Nikola
 */
public class FormaNovoIzdavanje extends javax.swing.JDialog {

    Bibliotekar bibliotekar;
    Clan clan;

    /**
     * Creates new form FormaNovoIzdavanje
     */
    public FormaNovoIzdavanje(java.awt.Frame parent, boolean modal, Bibliotekar b, Clan c) {
        super(parent, modal);
        this.bibliotekar = b;
        this.clan = c;
        initComponents();
        setLocationRelativeTo(null);

        popuniLabelu();
        ucitajKnjige();
        postaviDatum();
        postaviModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIzdavanje = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbKnjiga = new javax.swing.JComboBox();
        txtDatum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavkeIzdavanja = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnSacuvajIzdavanje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblIzdavanje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIzdavanje.setText("Izdavanje knjiga članu biblioteke : ");

        jLabel2.setText("Izaberite knjigu:");

        jLabel4.setText("Datum izdavanja:");

        tblStavkeIzdavanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavkeIzdavanja);

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnSacuvajIzdavanje.setText("Sačuvaj potvrdu o izdavanju");
        btnSacuvajIzdavanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajIzdavanjeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblIzdavanje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvajIzdavanje, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIzdavanje)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSacuvajIzdavanje, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int redniBroj = tblStavkeIzdavanja.getSelectedRow();
        if (redniBroj > -1) {
            TableModelIzdavanje tmi = (TableModelIzdavanje) tblStavkeIzdavanja.getModel();
            tmi.obrisiStavku(redniBroj);
            tmi.poredjajRedneBrojeve();
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        try {
            validacijaStavke();
            TableModelIzdavanje tmi = (TableModelIzdavanje) tblStavkeIzdavanja.getModel();
            int rb = 1 + tmi.getListaStavki().size();

            StavkaIzdavanja stavka = new StavkaIzdavanja();
            stavka.setRedniBroj(rb);

            Knjiga knjiga = (Knjiga) cmbKnjiga.getSelectedItem();
            stavka.setKnjiga(knjiga);

            tmi.dodajStavku(stavka);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(FormaNovoIzdavanje.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnSacuvajIzdavanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajIzdavanjeActionPerformed
        try {
            validacija();
            Izdavanje izdavanje = new Izdavanje();
            TableModelIzdavanje tmi = (TableModelIzdavanje) tblStavkeIzdavanja.getModel();
            izdavanje.setStavke(tmi.getListaStavki());
            izdavanje.setBibliotekar(bibliotekar);
            izdavanje.setClan(clan);
            izdavanje.setDatum(new Date());
            
            sacuvajIzdavanje(izdavanje);
            tmi.ocistiTabelu();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(FormaNovoIzdavanje.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSacuvajIzdavanjeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvajIzdavanje;
    private javax.swing.JComboBox cmbKnjiga;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIzdavanje;
    private javax.swing.JTable tblStavkeIzdavanja;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables

    private void popuniLabelu() {
        lblIzdavanje.setText("Izdavanje knjiga članu biblioteke : " + clan);
    }

    private void ucitajKnjige() {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.UCITAJ_KNJIGE);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
        ArrayList<Knjiga> listaKnjiga = (ArrayList<Knjiga>) so.getOdgovor();
        cmbKnjiga.removeAllItems();
        for (Knjiga knjiga : listaKnjiga) {
            cmbKnjiga.addItem(knjiga);
        }
    }

    private void postaviDatum() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date datum = new Date();

        txtDatum.setText(sdf.format(datum));
        txtDatum.setEnabled(false);
    }

    private void postaviModel() {
        cmbKnjiga.setSelectedIndex(-1);
        TableModelIzdavanje tmi = new TableModelIzdavanje();
        tblStavkeIzdavanja.setModel(tmi);
    }

    private void validacija() throws Exception {
        TableModelIzdavanje tmi = (TableModelIzdavanje) tblStavkeIzdavanja.getModel();
        if(tmi.getListaStavki().size()<1){
            throw new Exception("Nije izdata nijedna knjiga, molimo vas izaberite knjigu");
        }
    }

    private void validacijaStavke() throws Exception {
        if (cmbKnjiga.getSelectedIndex() < 0) {
            throw new Exception("Molimo vas izaberite knjigu.");
        }
    }

    private void sacuvajIzdavanje(Izdavanje izdavanje) {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.ZAPAMTI_IZDAVANJE);
        kz.setParametar(izdavanje);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
        boolean uspesno = (boolean) so.getOdgovor();
        if(uspesno==true){
            JOptionPane.showMessageDialog(this, "Uspešno ste sačuvali potvrdu o izdavanju!");
        } else {
           JOptionPane.showMessageDialog(this, "Potvrda o izdavanju nije sačuvana!"); 
        }
        
    }
}
